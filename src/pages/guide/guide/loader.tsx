import { inject, createDynamicRef } from '@viewfly/core'
import { ViewUpdateInjectionToken } from '../../injection-tokens'
export default function() {
  const subject = inject(ViewUpdateInjectionToken)
  const ref = createDynamicRef(node => {
    subject.next(node as HTMLElement)
  })
  return function() {
    return (
      <div ref={ref}><div class="xnote-root">
  <div data-placeholder="" class="xnote-content">
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p class="xnote-h1">加载器简介</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>在我们前面开发的编辑器中，我们已开发了各种组件、格式、属性等，并且，我们也大致掌握了插槽、选区和命令的基本使用。但如果你去尝试复制一段内容并粘贴到编辑器中时，你将会发现不会产生任何反应。</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>这是因为 Textbus 并不认识任何 HTML 内容，我们应该明确告诉 Textbus，当遇到 HTML 时，应该怎么去解析这些内容，并转换成我们的组件、插槽以及格式。</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>这就是加载器（loader）的作用。</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p class="xnote-h2">组件加载器</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>组件加载器是为了让我们能从 HTML 中识别出我们对应的组件，并把相应的数据转换成我们的组件数据。</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>加载器接口如下：</p>
    </div>
    <div data-lang="TypeScript" data-component="SourceCodeComponent" data-auto-break="true" data-theme="atom-one-dark" data-line-number="true" class="xnote-source-code xnote-source-code-line-number atom-one-dark">
      <div class="xnote-source-code-container hljs xnote-source-code-auto-break">
        <div style="width:2.5em" class="xnote-source-code-line-number-bg"></div>
        <div style="padding-left:2.5em;margin-left:-2.5em" class="xnote-source-code-content"><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-comment">/**</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;* 组件加载器</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-comment">&nbsp;*/</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">export</span>&nbsp;<span class="hljs-keyword">interface</span>&nbsp;<span class="hljs-title class_">ComponentLoader</span>&nbsp;{'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-comment">/** 识别组件的匹配方法 */</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">match</span>(<span class="hljs-attr">element</span>:&nbsp;<span class="hljs-title class_">HTMLElement</span>):&nbsp;<span class="hljs-built_in">boolean</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><br/></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-comment">/** 读取组件内容的方法 */</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">read</span>(<span class="hljs-attr">element</span>:&nbsp;<span class="hljs-title class_">HTMLElement</span>,&nbsp;<span class="hljs-attr">injector</span>:&nbsp;<span class="hljs-title class_">Injector</span>,&nbsp;<span class="hljs-attr">slotParser</span>:&nbsp;<span class="hljs-title class_">SlotParser</span>):&nbsp;<span class="hljs-title class_">ComponentInstance</span>&nbsp;|&nbsp;<span class="hljs-title class_">Slot</span>&nbsp;|&nbsp;<span class="hljs-built_in">void</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'}</span></pre>
        </div><span class="xnote-source-code-lang">TypeScript</span>
      </div>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>match()识别组件的方法用于匹配一个 DOM 节点是不是组件的根节点，返回 boolean 值。Textbus 在调用时，会传入当前要匹配的 DOM 节点。当返回结果为 false 时，即认为当前 DOM 节点不是我们要识别的组件，Textbus 会跳过并继续调用其它的加载器，继续尝试匹配。当返回为 true 时，则会立即调用 read 方法，读取组件的内容。</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>read()读取组件内容的方法当 match 方法返回为 true 时，Textbus 会把匹配到的 DOM 节点，再次传入 read 方法的第一个参数，并同时在第二个参数传入当前编辑器的 IoC 容器（Injector），在第三个参数传入用于解析插槽内容的函数（SlotParser）。<br/>我们需要在 read 方法内完成组件的读取，并返回组件的实例（也可以返回插槽，主要用于拍平数据结构，但在大多数情况下不需要，因在此不多做介绍）。<br/></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>我们以段落组件为例，下面让我们来编写一个段落组件的加载器。</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>这是我们前面编写的段落组件：</p>
    </div>
    <div data-lang="TypeScript" data-component="SourceCodeComponent" data-auto-break="true" data-theme="atom-one-dark" data-line-number="true" class="xnote-source-code xnote-source-code-line-number atom-one-dark">
      <div class="xnote-source-code-container hljs xnote-source-code-auto-break">
        <div style="width:2.5em" class="xnote-source-code-line-number-bg"></div>
        <div style="padding-left:2.5em;margin-left:-2.5em" class="xnote-source-code-content xnote-source-code-content-highlight"><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">export</span>&nbsp;<span class="hljs-keyword">const</span>&nbsp;<span class="hljs-title class_">ParagraphComponentView</span>&nbsp;= (<span class="hljs-attr">props</span>:&nbsp;<span class="hljs-title class_">ViewComponentProps</span>&lt;<span class="hljs-title class_">ParagraphComponent</span>&gt;) {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-keyword">const</span>&nbsp;adapter =&nbsp;<span class="hljs-title function_">inject</span>(<span class="hljs-title class_">DomAdapter</span>)</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;<span class="hljs-function">() =&gt;</span>&nbsp;{'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;(</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&nbsp;<span class="hljs-attr">data-component</span>=<span class="hljs-string">{'{'}props.component.name{'}'}</span>&nbsp;<span class="hljs-attr">ref</span>=<span class="hljs-string">{'{'}props.rootRef{'}'}</span>&gt;</span></span></span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'{'}</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;adapter.slotRender(props.component.state.slot, children =&gt; {'{'}</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return createVNode('p', null, children)</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'}'})</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content"><span class="language-xml">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;)</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'}</span></pre>
        </div><span class="xnote-source-code-lang">TypeScript</span>
      </div>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>我们可以看到，我们的段落组件根节点为一个 div 标签，并且有一个&nbsp;<code class="xnote-code">data-component="ParagraphComponent"</code>&nbsp;的属性。而段落组件内插槽的内容渲染在了一个 p 标签内。我们可以编辑如下加载器。</p>
    </div>
    <div data-lang="TypeScript" data-component="SourceCodeComponent" data-auto-break="true" data-theme="atom-one-dark" data-line-number="true" class="xnote-source-code xnote-source-code-line-number atom-one-dark">
      <div class="xnote-source-code-container hljs xnote-source-code-auto-break">
        <div style="width:2.5em" class="xnote-source-code-line-number-bg"></div>
        <div style="padding-left:2.5em;margin-left:-2.5em" class="xnote-source-code-content"><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">import</span>&nbsp;{'{'}&nbsp;<span class="hljs-title class_">ComponentInstance</span>,&nbsp;<span class="hljs-title class_">Slot</span>,&nbsp;<span class="hljs-title class_">ContentType</span>,&nbsp;<span class="hljs-title class_">Textbus</span>&nbsp;{'}'} form&nbsp;<span class="hljs-string">'@textbus/core'</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">import</span>&nbsp;{'{'}&nbsp;<span class="hljs-title class_">ComponentLoder</span>,&nbsp;<span class="hljs-title class_">SlotParser</span>&nbsp;{'}'}&nbsp;<span class="hljs-keyword">from</span>&nbsp;<span class="hljs-string">'@textbus/platform-browser'</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">import</span>&nbsp;{'{'}&nbsp;<span class="hljs-title class_">Injector</span>&nbsp;{'}'}&nbsp;<span class="hljs-keyword">from</span>&nbsp;<span class="hljs-string">'@viewfly/core'</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><br/></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">export</span>&nbsp;<span class="hljs-keyword">const</span>&nbsp;<span class="hljs-attr">paragraphComponentLoader</span>:&nbsp;<span class="hljs-title class_">ComponentLoader</span>&nbsp;= {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">match</span>(<span class="hljs-params">element: HTMLElement</span>) {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;element.<span class="hljs-property">tagName</span>&nbsp;===&nbsp;<span class="hljs-string">'DIV'</span>&nbsp;&amp;&amp; element.<span class="hljs-property">dataset</span>.<span class="hljs-property">component</span>&nbsp;===&nbsp;<span class="hljs-title class_">ParagraphComponent</span>.<span class="hljs-property">componentName</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'},</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">read</span>(<span class="hljs-attr">element</span>:&nbsp;<span class="hljs-title class_">HTMLElement</span>,&nbsp;<span class="hljs-attr">textbus</span>:&nbsp;<span class="hljs-title class_">Textbus</span>,&nbsp;<span class="hljs-attr">slotParser</span>:&nbsp;<span class="hljs-title class_">SlotParser</span>):&nbsp;<span class="hljs-title class_">ComponentInstance</span>&nbsp;|&nbsp;<span class="hljs-title class_">Slot</span>&nbsp;|&nbsp;<span class="hljs-built_in">void</span>&nbsp;{'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment">// 获取插槽内容的容器节点</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">const</span>&nbsp;p = element.<span class="hljs-property">children</span>[<span class="hljs-number">0</span>]&nbsp;<span class="hljs-keyword">as</span>&nbsp;<span class="hljs-title class_">HTMLParagraphElement</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment">// 将容器节点内的内容读取到新创建的插槽内</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">const</span>&nbsp;slot =&nbsp;<span class="hljs-title function_">slotParser</span>(<span class="hljs-keyword">new</span>&nbsp;<span class="hljs-title class_">Slot</span>([<span class="hljs-title class_">ContentType</span>.<span class="hljs-property">Text</span>,&nbsp;<span class="hljs-title class_">ContentType</span>.<span class="hljs-property">InlineComponent</span>]), p)</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><br/></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment">// 创建段落组件并返回</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;<span class="hljs-keyword">new</span>&nbsp;<span class="hljs-title class_">ParagraphComponent</span>(textbus, {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;slot</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;{'}'})</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'}</span></pre>
        </div><span class="xnote-source-code-lang">TypeScript</span>
      </div>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p class="xnote-h3">复杂插槽节点解析</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>当你组件在组件通过 slotRender 渲染插槽内容时，如果有多层节点，那么，除了 slotParser 的第二个参数需要传入插槽的根节点外，还需要传入在组件内渲染 content 的根节点。</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>如组件是这样渲染的。</p>
    </div>
    <div data-lang="TypeScript" data-component="SourceCodeComponent" data-auto-break="true" data-theme="atom-one-dark" data-line-number="true" class="xnote-source-code xnote-source-code-line-number atom-one-dark">
      <div class="xnote-source-code-container hljs xnote-source-code-auto-break">
        <div style="width:2.5em" class="xnote-source-code-line-number-bg"></div>
        <div style="padding-left:2.5em;margin-left:-2.5em" class="xnote-source-code-content xnote-source-code-content-highlight"><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">export</span>&nbsp;<span class="hljs-keyword">const</span>&nbsp;<span class="hljs-title class_">ParagraphComponentView</span>&nbsp;= (<span class="hljs-attr">props</span>:&nbsp;<span class="hljs-title class_">ViewComponentProps</span>&lt;<span class="hljs-title class_">ParagraphComponent</span>&gt;) {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-keyword">const</span>&nbsp;adapter =&nbsp;<span class="hljs-title function_">inject</span>(<span class="hljs-title class_">DomAdapter</span>)</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;<span class="hljs-function">() =&gt;</span>&nbsp;{'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;(</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&nbsp;<span class="hljs-attr">data-component</span>=<span class="hljs-string">{'{'}props.component.name{'}'}</span>&nbsp;<span class="hljs-attr">ref</span>=<span class="hljs-string">{'{'}props.rootRef{'}'}</span>&gt;</span></span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'{'}</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;adapter.slotRender(props.component.state.slot, children =&gt; {'{'}</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return createVNode('div', {'{'}class: 'slot-root'{'}'}, [</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;createVNode('div', null, ['text']),</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;createVNode('p', {'{'}class: 'slot-content'{'}'}, children)</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;])</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'}'})</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="language-xml">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;)</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'}</span></pre>
        </div><span class="xnote-source-code-lang">TypeScript</span>
      </div>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>那么在加载器中，则需要：</p>
    </div>
    <div data-lang="TypeScript" data-component="SourceCodeComponent" data-auto-break="true" data-theme="atom-one-dark" data-line-number="true" class="xnote-source-code xnote-source-code-line-number atom-one-dark">
      <div class="xnote-source-code-container hljs xnote-source-code-auto-break">
        <div style="width:2.5em" class="xnote-source-code-line-number-bg"></div>
        <div style="padding-left:2.5em;margin-left:-2.5em" class="xnote-source-code-content xnote-source-code-content-highlight"><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">export</span>&nbsp;<span class="hljs-keyword">const</span>&nbsp;<span class="hljs-attr">paragraphComponentLoader</span>:&nbsp;<span class="hljs-title class_">ComponentLoader</span>&nbsp;= {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">match</span>(<span class="hljs-params">element: HTMLElement</span>) {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;element.<span class="hljs-property">tagName</span>&nbsp;===&nbsp;<span class="hljs-string">'DIV'</span>&nbsp;&amp;&amp; element.<span class="hljs-property">dataset</span>.<span class="hljs-property">component</span>&nbsp;===&nbsp;<span class="hljs-title class_">ParagraphComponent</span>.<span class="hljs-property">componentName</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'},</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">read</span>(<span class="hljs-attr">element</span>:&nbsp;<span class="hljs-title class_">HTMLElement</span>,&nbsp;<span class="hljs-attr">textbus</span>:&nbsp;<span class="hljs-title class_">Textbus</span>,&nbsp;<span class="hljs-attr">slotParser</span>:&nbsp;<span class="hljs-title class_">SlotParser</span>):&nbsp;<span class="hljs-title class_">ComponentInstance</span>&nbsp;|&nbsp;<span class="hljs-title class_">Slot</span>&nbsp;|&nbsp;<span class="hljs-built_in">void</span>&nbsp;{'{'}</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment">// 获取插槽根节点</span></span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">const</span>&nbsp;slotRoot = element.<span class="hljs-property">children</span>[<span class="hljs-number">0</span>]&nbsp;<span class="hljs-keyword">as</span>&nbsp;<span class="hljs-title class_">HTMLDivElement</span></span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment">// 将容器节点内的内容读取到新创建的插槽内</span></span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">const</span>&nbsp;slot =&nbsp;<span class="hljs-title function_">slotParser</span>(</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">new</span>&nbsp;<span class="hljs-title class_">Slot</span>([<span class="hljs-title class_">ContentType</span>.<span class="hljs-property">Text</span>,&nbsp;<span class="hljs-title class_">ContentType</span>.<span class="hljs-property">InlineComponent</span>]),</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;slotRoot,</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;slotRoot.<span class="hljs-property">children</span>[<span class="hljs-number">1</span>]</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;)</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content"><br/></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment">// 创建段落组件并返回</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;<span class="hljs-keyword">new</span>&nbsp;<span class="hljs-title class_">ParagraphComponent</span>(textbus, {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;slot</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;{'}'})</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'}</span></pre>
        </div><span class="xnote-source-code-lang">TypeScript</span>
      </div>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>我们可以继续编写其它组件的加载器，组件加载器编写完成后，我们还需要把加载器注册到我们的浏览器模块中，Textbus 会在解析 HTML 时，自动调用我们的组件加载器。</p>
    </div>
    <div data-lang="TypeScript" data-component="SourceCodeComponent" data-auto-break="true" data-theme="atom-one-dark" data-line-number="true" class="xnote-source-code xnote-source-code-line-number atom-one-dark">
      <div class="xnote-source-code-container hljs xnote-source-code-auto-break">
        <div style="width:2.5em" class="xnote-source-code-line-number-bg"></div>
        <div style="padding-left:2.5em;margin-left:-2.5em" class="xnote-source-code-content"><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">const</span>&nbsp;browserModule =&nbsp;<span class="hljs-keyword">new</span>&nbsp;<span class="hljs-title class_">BrowserModule</span>({'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">renderTo</span>(<span class="hljs-params"></span>) {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">'editor'</span>)!</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'},</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;adapter,&nbsp;<span class="hljs-comment">// 添加 Viewfly 适配器</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-attr">componentLoadrs</span>: [</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;paragraphComponentLoader,</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;listComponentLoader</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;]</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'})</span></pre>
        </div><span class="xnote-source-code-lang">TypeScript</span>
      </div>
    </div>
    <blockquote data-component="BlockquoteComponent" class="xnote-blockquote">
      <div>
        <div data-component="ParagraphComponent" class="xnote-paragraph">
          <p><strong style="color:rgb(246, 48, 48)">重要提示：</strong>我们应当把除根组件外的所有组件和加载器都通过配置项注册到编辑器中，这样 Textbus 在解析 HTML 或做历史记录操作时才能找到对应的加载器和组件。<br/>当没有配置相应加载器时，将导致 Textbus 不能正常解析 HTML，也无法实现复制粘贴功能。当没有配置相应的组件时，Textbus 将不能对相应的组件做历史记录。<br/></p>
        </div>
      </div>
    </blockquote>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p class="xnote-h3">格式兼容</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>在实际的项目中，我们可能需要兼容来自 word、excel、网页或其它编辑器内容。我们可以灵活使用加载器的特性，用来兼容这些数据。如，我们完全可以把一个 table 转换为一个段落组件，只需要 paragraphComponentLoader 的 match 方法中，添加 Table 标签的匹配即可。</p>
    </div>
    <div data-lang="TypeScript" data-component="SourceCodeComponent" data-auto-break="true" data-theme="atom-one-dark" data-line-number="true" class="xnote-source-code xnote-source-code-line-number atom-one-dark">
      <div class="xnote-source-code-container hljs xnote-source-code-auto-break">
        <div style="width:2.5em" class="xnote-source-code-line-number-bg"></div>
        <div style="padding-left:2.5em;margin-left:-2.5em" class="xnote-source-code-content xnote-source-code-content-highlight"><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">export</span>&nbsp;<span class="hljs-keyword">const</span>&nbsp;<span class="hljs-attr">paragraphComponentLoader</span>:&nbsp;<span class="hljs-title class_">ComponentLoader</span>&nbsp;= {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">match</span>(<span class="hljs-params">element: HTMLElement</span>) {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;element.<span class="hljs-property">tagName</span>&nbsp;===&nbsp;<span class="hljs-string">'DIV'</span>&nbsp;&amp;&amp; element.<span class="hljs-property">dataset</span>.<span class="hljs-property">component</span>&nbsp;=== paragraphComponent.<span class="hljs-property">name</span>&nbsp;||</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.<span class="hljs-property">tagName</span>&nbsp;===&nbsp;<span class="hljs-string">'TABLE'</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'},</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">read</span>(<span class="hljs-attr">element</span>:&nbsp;<span class="hljs-title class_">HTMLElement</span>,&nbsp;<span class="hljs-attr">textbus</span>:&nbsp;<span class="hljs-title class_">Textbus</span>,&nbsp;<span class="hljs-attr">slotParser</span>:&nbsp;<span class="hljs-title class_">SlotParser</span>):&nbsp;<span class="hljs-title class_">ComponentInstance</span>&nbsp;|&nbsp;<span class="hljs-title class_">Slot</span>&nbsp;|&nbsp;<span class="hljs-built_in">void</span>&nbsp;{'{'}</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">if</span>&nbsp;(element.<span class="hljs-property">tagName</span>&nbsp;===&nbsp;<span class="hljs-string">'TABLE'</span>) {'{'}</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment">// 这里编辑解析逻辑并返回对应组件</span></span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;<span class="hljs-keyword">new</span>&nbsp;<span class="hljs-title class_">TableComponent</span>(injector, {'{'}...{'}'})</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;...</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'}</span></pre>
        </div><span class="xnote-source-code-lang">TypeScript</span>
      </div>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>灵活使用加载器，可以帮我们兼容来自任何数据源的数据。</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p class="xnote-h2">格式加载器</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><span style="color:rgb(73, 80, 96)">行内格式加载器</span></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><span style="color:rgb(73, 80, 96)">和组件一样，格式也需要能够识别 DOM 节点，我们同样需要加载器来完成这个工作，格式加载器接口定义如下：</span></p>
    </div>
    <div data-lang="TypeScript" data-component="SourceCodeComponent" data-auto-break="true" data-theme="atom-one-dark" data-line-number="true" class="xnote-source-code xnote-source-code-line-number atom-one-dark">
      <div class="xnote-source-code-container hljs xnote-source-code-auto-break">
        <div style="width:2.5em" class="xnote-source-code-line-number-bg"></div>
        <div style="padding-left:2.5em;margin-left:-2.5em" class="xnote-source-code-content"><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">export</span>&nbsp;<span class="hljs-keyword">interface</span>&nbsp;<span class="hljs-title class_">FormatLoaderReadResult</span>&lt;T&nbsp;<span class="hljs-keyword">extends</span>&nbsp;<span class="hljs-title class_">FormatValue</span>&gt; {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-attr">formatter</span>:&nbsp;<span class="hljs-title class_">Formatter</span>&lt;T&gt;</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-attr">value</span>: T</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><br/></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-comment">/**</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;* 格式加载器</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-comment">&nbsp;*/</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">export</span>&nbsp;<span class="hljs-keyword">interface</span>&nbsp;<span class="hljs-title class_">FormatLoader</span>&lt;T&nbsp;<span class="hljs-keyword">extends</span>&nbsp;<span class="hljs-title class_">FormatValue</span>&gt; {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-comment">/**</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;* 匹配一个 DOM 节点是否是某个格式节点</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;*&nbsp;<span class="hljs-doctag">@param</span>&nbsp;<span class="hljs-variable">element</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-comment">&nbsp;&nbsp;&nbsp;*/</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">match</span>(<span class="hljs-attr">element</span>:&nbsp;<span class="hljs-title class_">HTMLElement</span>):&nbsp;<span class="hljs-built_in">boolean</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><br/></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-comment">/**</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;* 读取匹配到的节点，并返回读取后的信息</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;*&nbsp;<span class="hljs-doctag">@param</span>&nbsp;<span class="hljs-variable">element</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-comment">&nbsp;&nbsp;&nbsp;*/</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">read</span>(<span class="hljs-attr">element</span>:&nbsp;<span class="hljs-title class_">HTMLElement</span>):&nbsp;<span class="hljs-title class_">FormatLoaderReadResult</span>&lt;T&gt;</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'}</span></pre>
        </div><span class="xnote-source-code-lang">TypeScript</span>
      </div>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><strong style="font-size:inherit">match()</strong></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><span style="font-size:0.9em">用于识别格式的方法</span></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>匹配一个节点是否为一个格式节点。返回 boolean 值。</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><strong style="font-size:inherit">read()</strong></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><span style="font-size:0.9em">读取格式值的方法</span></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>当 match 方法返回值为 true 时，则会调用 read 方法获取格式的值并返回。</p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><span style="color:rgb(73, 80, 96)">我们以字体大小为例，创建一个加载器对应的 Formatter：</span></p>
    </div>
    <div data-lang="TypeScript" data-component="SourceCodeComponent" data-auto-break="true" data-theme="atom-one-dark" data-line-number="true" class="xnote-source-code xnote-source-code-line-number atom-one-dark">
      <div class="xnote-source-code-container hljs xnote-source-code-auto-break">
        <div style="width:2.5em" class="xnote-source-code-line-number-bg"></div>
        <div style="padding-left:2.5em;margin-left:-2.5em" class="xnote-source-code-content"><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">export</span>&nbsp;<span class="hljs-keyword">const</span>&nbsp;fontSizeFormatter = {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-attr">name</span>:&nbsp;<span class="hljs-string">'FontSizeFormatter'</span>,</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-attr">columnd</span>:&nbsp;<span class="hljs-literal">false</span>,</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">render</span>(<span class="hljs-params">chilren, value</span>) {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;{'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr">fallbackTagName</span>:&nbsp;<span class="hljs-string">'span'</span>,</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-title function_">attach</span>(<span class="hljs-params">host: VElement</span>) {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.<span class="hljs-property">styles</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">'fontSize'</span>, value)</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><br/></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">export</span>&nbsp;<span class="hljs-keyword">const</span>&nbsp;fontSizeFormatLoader = {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-comment">// 匹配一个节点是否为格式节点</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">match</span>(<span class="hljs-params">element</span>) {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;!!element.<span class="hljs-property">style</span>.<span class="hljs-property">fontSize</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'},</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-comment">// 读取格式的值</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">read</span>(<span class="hljs-params">element</span>) {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;{'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr">formatter</span>: fontSizeFormatter,</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr">value</span>: element.<span class="hljs-property">style</span>.<span class="hljs-property">fontSize</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'}</span></pre>
        </div><span class="xnote-source-code-lang">TypeScript</span>
      </div>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><span style="color:rgb(73, 80, 96)">我们可以继续完成所有格式加载器，当加载器编写完成后，我们应该把它们注册到浏览器模块中。</span></p>
    </div>
    <div data-lang="TypeScript" data-component="SourceCodeComponent" data-auto-break="true" data-theme="atom-one-dark" data-line-number="true" class="xnote-source-code xnote-source-code-line-number atom-one-dark">
      <div class="xnote-source-code-container hljs xnote-source-code-auto-break">
        <div style="width:2.5em" class="xnote-source-code-line-number-bg"></div>
        <div style="padding-left:2.5em;margin-left:-2.5em" class="xnote-source-code-content xnote-source-code-content-highlight"><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">const</span>&nbsp;browserModule =&nbsp;<span class="hljs-keyword">new</span>&nbsp;<span class="hljs-title class_">BrowserModule</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">'editor'</span>)!, {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;adapter,&nbsp;<span class="hljs-comment">// 添加 Viewfly 适配器</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-attr">componentLoadrs</span>: [</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;paragraphComponentLoader,</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;listComponentLoader</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;],</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-attr">formatLoaders</span>: [</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;colorFormatLoader,</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;boldFormatLoader,</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;fontSizeFormatLoader</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;]</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'})</span></pre>
        </div><span class="xnote-source-code-lang">TypeScript</span>
      </div>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><span style="color:rgb(73, 80, 96)">属性加载器</span></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><span style="color:rgb(73, 80, 96)">属性加载器和格式加载器一样，只是返回的数据有所不同。</span></p>
    </div>
    <div data-lang="TypeScript" data-component="SourceCodeComponent" data-auto-break="true" data-theme="atom-one-dark" data-line-number="true" class="xnote-source-code xnote-source-code-line-number atom-one-dark">
      <div class="xnote-source-code-container hljs xnote-source-code-auto-break">
        <div style="width:2.5em" class="xnote-source-code-line-number-bg"></div>
        <div style="padding-left:2.5em;margin-left:-2.5em" class="xnote-source-code-content"><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">export</span>&nbsp;<span class="hljs-keyword">interface</span>&nbsp;<span class="hljs-title class_">AttributeLoaderReadResult</span>&lt;T&nbsp;<span class="hljs-keyword">extends</span>&nbsp;<span class="hljs-title class_">FormatValue</span>&gt; {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-attr">attribute</span>:&nbsp;<span class="hljs-title class_">Attribute</span>&lt;T&gt;</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-attr">value</span>: T</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-comment">/**</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;* 属性加载器</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-comment">&nbsp;*/</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">export</span>&nbsp;<span class="hljs-keyword">interface</span>&nbsp;<span class="hljs-title class_">AttributeLoader</span>&lt;T&nbsp;<span class="hljs-keyword">extends</span>&nbsp;<span class="hljs-title class_">FormatValue</span>&gt; {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-comment">/**</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;* 匹配一个 DOM 节点是否是某个属性节点</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;*&nbsp;<span class="hljs-doctag">@param</span>&nbsp;<span class="hljs-variable">element</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-comment">&nbsp;&nbsp;&nbsp;*/</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">match</span>(<span class="hljs-attr">element</span>:&nbsp;<span class="hljs-title class_">HTMLElement</span>):&nbsp;<span class="hljs-built_in">boolean</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><br/></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-comment">/**</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;* 读取匹配到的节点，并返回读取后的信息</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;*&nbsp;<span class="hljs-doctag">@param</span>&nbsp;<span class="hljs-variable">element</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-comment">&nbsp;&nbsp;&nbsp;*/</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">read</span>(<span class="hljs-attr">element</span>:&nbsp;<span class="hljs-title class_">HTMLElement</span>):&nbsp;<span class="hljs-title class_">AttributeLoaderReadResult</span>&lt;T&gt;</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'}</span></pre>
        </div><span class="xnote-source-code-lang">TypeScript</span>
      </div>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p>我们以对齐方式的属性加载器为例：</p>
    </div>
    <div data-lang="TypeScript" data-component="SourceCodeComponent" data-auto-break="true" data-theme="atom-one-dark" data-line-number="true" class="xnote-source-code xnote-source-code-line-number atom-one-dark">
      <div class="xnote-source-code-container hljs xnote-source-code-auto-break">
        <div style="width:2.5em" class="xnote-source-code-line-number-bg"></div>
        <div style="padding-left:2.5em;margin-left:-2.5em" class="xnote-source-code-content"><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">export</span>&nbsp;<span class="hljs-keyword">const</span>&nbsp;<span class="hljs-attr">textAlignAttributeLoader</span>:&nbsp;<span class="hljs-title class_">AttributeLoader</span>&lt;<span class="hljs-built_in">string</span>&gt; = {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">match</span>(<span class="hljs-params">element: HTMLElement</span>) {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;!!element.<span class="hljs-property">style</span>.<span class="hljs-property">textAlign</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'},</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">read</span>(<span class="hljs-params">element: HTMLElement</span>) {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;{'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr">attribute</span>: textAlignAttribute,</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr">value</span>: element.<span class="hljs-property">style</span>.<span class="hljs-property">textAlign</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'}</span></pre>
        </div><span class="xnote-source-code-lang">TypeScript</span>
      </div>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><span style="color:rgb(73, 80, 96)">不要忘记把加载器添加到浏览器模块中。</span></p>
    </div>
    <div data-lang="TypeScript" data-component="SourceCodeComponent" data-auto-break="true" data-theme="atom-one-dark" data-line-number="true" class="xnote-source-code xnote-source-code-line-number atom-one-dark">
      <div class="xnote-source-code-container hljs xnote-source-code-auto-break">
        <div style="width:2.5em" class="xnote-source-code-line-number-bg"></div>
        <div style="padding-left:2.5em;margin-left:-2.5em" class="xnote-source-code-content xnote-source-code-content-highlight"><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content"><span class="hljs-keyword">const</span>&nbsp;browserModule =&nbsp;<span class="hljs-keyword">new</span>&nbsp;<span class="hljs-title class_">BrowserModule</span>({'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-title function_">renderTo</span>(<span class="hljs-params"></span>) {'{'}</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">'editor'</span>)!</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;{'}'},</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;adapter,&nbsp;<span class="hljs-comment">// 添加 Viewfly 适配器</span></span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-attr">componentLoadrs</span>: [</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;paragraphComponentLoader,</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;listComponentLoader</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;],</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-attr">formatLoaders</span>: [</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;colorFormatLoader,</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;boldFormatLoader,</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;fontSizeFormatLoader</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">&nbsp;&nbsp;],</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;<span class="hljs-attr">attributeLoaders</span>: [</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;&nbsp;&nbsp;textAlignAttributeLoader</span></pre><pre class="xnote-source-code-line xnote-source-code-line-emphasize"><span class="xnote-source-code-line-content">&nbsp;&nbsp;]</span></pre><pre class="xnote-source-code-line"><span class="xnote-source-code-line-content">{'}'})</span></pre>
        </div><span class="xnote-source-code-lang">TypeScript</span>
      </div>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p class="xnote-h3"><span style="color:rgb(73, 80, 96)">总结</span></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><span style="color:rgb(73, 80, 96)">加载器是 Textbus 识别 HTML 的关键实现，由于 Textbus 的灵活性，在 Textbus 内部并未预置任何规则来解析 HTML，需要我们根据需要添加合适的加载器并注册到浏览器模块中。</span></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><span style="color:rgb(73, 80, 96)">我们也可以利用加载器的特点，对一些外来数据做匹配，并转换成我们的数据。不仅是组件的加载器可以转换任意节点，格式和属性加载器也是一样的。</span></p>
    </div>
    <div data-component="HighlightBoxComponent" data-icon="❗" class="xnote-highlight-box">
      <div class="xnote-highlight-box-left">
        <div class="xnote-highlight-box-icon"><button type="button">❗</button></div>
      </div>
      <div class="xnote-highlight-box-content">
        <div data-component="ParagraphComponent" class="xnote-paragraph">
          <p><strong style="color:rgb(246, 48, 48)">重要提示：</strong>在没有相应加载器时，Textbus 将会忽略那些未匹配到的标签与样式，且不会产生任何效果。如果你发现一些样式没有了，那基本就是你没有实现对应的加载器，或者你的加载器排在太后面，导致优先级太低没有匹配到。</p>
        </div>
      </div>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p class="xnote-h4"><span style="color:rgb(73, 80, 96)">加载器优先级</span></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><span style="color:rgb(73, 80, 96)">加载器默认按照从前到后的顺序依次匹配，你需要注意你的加载器顺序，以便能准确匹配并应用到相应的加载器。</span></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p class="xnote-h4"><span style="color:rgb(73, 80, 96)">返回 Slot 有什么结果</span></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><span style="color:rgb(73, 80, 96)">在调用加载器的 read() 方法时，我们还可以返回一个插槽实例。Textbus 分拆分这个插槽里的内容，并插入在上一层的插槽内，我们可以利用这个特点，拍平一些嵌套层级很深的 DOM 结构。</span></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p class="xnote-h4"><span style="color:rgb(73, 80, 96)">不返回有什么结果</span></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><span style="color:rgb(73, 80, 96)">当调用加载器的 read() 方法时，如果我们没有任何返回，Textbus 将忽略这个 DOM 节点的数据。</span></p>
    </div>
    <div data-component="ParagraphComponent" class="xnote-paragraph">
      <p><br/></p>
    </div>
  </div>
</div></div>
    )
  }
}